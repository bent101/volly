/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero  ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/BriefHQ/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { default as DrizzleConfigSchema } from "./drizzle-zero.config";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
	default: {
		tables: {
			aiResponses: {
				name: "aiResponses",
				columns: {
					id: {
						type: "string",
						optional: false,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["aiResponses"]["columns"]["id"]["customType"],
					},
					conversationId: {
						type: "string",
						optional: false,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["aiResponses"]["columns"]["conversationId"]["customType"],
						serverName: "conversation_id",
					},
					parentId: {
						type: "string",
						optional: true,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["aiResponses"]["columns"]["parentId"]["customType"],
						serverName: "parent_id",
					},
					content: {
						type: "string",
						optional: false,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["aiResponses"]["columns"]["content"]["customType"],
					},
					model: {
						type: "string",
						optional: false,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["aiResponses"]["columns"]["model"]["customType"],
					},
					metadata: {
						type: "string",
						optional: true,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["aiResponses"]["columns"]["metadata"]["customType"],
					},
					createdAt: {
						type: "number",
						optional: true,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["aiResponses"]["columns"]["createdAt"]["customType"],
						serverName: "created_at",
					},
				},
				primaryKey: ["id"],
				serverName: "ai_responses",
			},
			conversations: {
				name: "conversations",
				columns: {
					id: {
						type: "string",
						optional: false,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["conversations"]["columns"]["id"]["customType"],
					},
					userId: {
						type: "string",
						optional: false,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["conversations"]["columns"]["userId"]["customType"],
						serverName: "user_id",
					},
					title: {
						type: "string",
						optional: false,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["conversations"]["columns"]["title"]["customType"],
					},
					createdAt: {
						type: "number",
						optional: true,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["conversations"]["columns"]["createdAt"]["customType"],
						serverName: "created_at",
					},
					updatedAt: {
						type: "number",
						optional: true,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["conversations"]["columns"]["updatedAt"]["customType"],
						serverName: "updated_at",
					},
					deletedAt: {
						type: "number",
						optional: true,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["conversations"]["columns"]["deletedAt"]["customType"],
						serverName: "deleted_at",
					},
				},
				primaryKey: ["id"],
			},
			prompts: {
				name: "prompts",
				columns: {
					id: {
						type: "string",
						optional: false,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["prompts"]["columns"]["id"]["customType"],
					},
					conversationId: {
						type: "string",
						optional: false,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["prompts"]["columns"]["conversationId"]["customType"],
						serverName: "conversation_id",
					},
					parentId: {
						type: "string",
						optional: true,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["prompts"]["columns"]["parentId"]["customType"],
						serverName: "parent_id",
					},
					content: {
						type: "string",
						optional: false,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["prompts"]["columns"]["content"]["customType"],
					},
					createdAt: {
						type: "number",
						optional: true,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["prompts"]["columns"]["createdAt"]["customType"],
						serverName: "created_at",
					},
				},
				primaryKey: ["id"],
			},
			users: {
				name: "users",
				columns: {
					id: {
						type: "string",
						optional: false,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["id"]["customType"],
					},
					email: {
						type: "string",
						optional: false,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["email"]["customType"],
					},
					createdAt: {
						type: "number",
						optional: true,
						customType:
							null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["createdAt"]["customType"],
						serverName: "created_at",
					},
				},
				primaryKey: ["id"],
			},
		},
		relationships: {
			aiResponses: {
				conversation: [
					{
						sourceField: ["conversationId"],
						destField: ["id"],
						destSchema: "conversations",
						cardinality: "one",
					},
				],
			},
			conversations: {
				user: [
					{
						sourceField: ["userId"],
						destField: ["id"],
						destSchema: "users",
						cardinality: "one",
					},
				],
				prompts: [
					{
						sourceField: ["id"],
						destField: ["conversationId"],
						destSchema: "prompts",
						cardinality: "many",
					},
				],
				aiResponses: [
					{
						sourceField: ["id"],
						destField: ["conversationId"],
						destSchema: "aiResponses",
						cardinality: "many",
					},
				],
			},
			prompts: {
				conversation: [
					{
						sourceField: ["conversationId"],
						destField: ["id"],
						destSchema: "conversations",
						cardinality: "one",
					},
				],
			},
			users: {
				conversations: [
					{
						sourceField: ["id"],
						destField: ["userId"],
						destSchema: "conversations",
						cardinality: "many",
					},
				],
			},
		},
	},
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
